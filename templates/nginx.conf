{{define "nginx-conf-http"}}
	client_max_body_size 4G;
	keepalive_timeout 10;
	proxy_buffers 16 64k;
	proxy_buffer_size 128k;
	server_name {{.}};

	access_log /var/log/nginx/{{.}}.access.log;
	error_log /var/log/nginx/{{.}}.error.log;
{{end}}


{{define "nginx-conf-assets"}}
	location ~* \.(?:png|jpg)$ {
		gzip_static on;
		expires max;
		access_log off;
		add_header Cache-Control "public";
	}

	location ~* \.(?:rss|atom)$ {
		expires 12h;
		access_log off;
		add_header Cache-Control "public";
	}

	if ($request_method !~ ^(GET|HEAD|PUT|PATCH|POST|DELETE|OPTIONS)$ ){
		return 405;
	}
	if (-f $document_root/system/maintenance.html) {
		return 503;
	}
{{end}}

{{define "nginx-conf-https"}}
	listen 443;
	ssl on;
	ssl_certificate  /etc/ssl/certs/{{.}}.crt;
	ssl_certificate_key  /etc/ssl/private/{{.}}.key;
	ssl_session_timeout  5m;
	ssl_protocols  SSLv2 SSLv3 TLSv1;
	ssl_ciphers  RC4:HIGH:!aNULL:!MD5;
	ssl_prefer_server_ciphers  on;
{{end}}

{{define "nginx-conf-rewrite"}}
server {
	listen 80;
	server_name {{.}};
	rewrite ^(.*) https://$host$1 permanent;
}
{{end}}

{{if .Ssl}}
# rewrite to https
{{template "nginx-conf-rewrite" .Frontend}}
{{template "nginx-conf-rewrite" .Backend}}
{{end}}

# {{.Frontend}}
server {
{{if .Ssl}}
	{{template "nginx-conf-https" .Frontend}}
{{else}}
	listen 80;
{{end}}
	{{template "nginx-conf-http" .Frontend}}
	root {{.Root}}/dashboard/build;
	try_files $uri $uri/ /index.html;

	{{template "nginx-conf-assets"}}

	location ~* \.(?:css|js)$ {
		gzip_static on;
		expires max;
		access_log off;
		add_header Cache-Control "public";
	}
}

# {{.Backend}}
upstream {{.Backend}}_prod {
	server localhost:{{.Port}} fail_timeout=0;
}
server {
{{if .Ssl}}
	{{template "nginx-conf-https" .Backend}}
{{else}}
	listen 80;
{{end}}
	{{template "nginx-conf-http" .Backend}}
	root {{.Root}}/public;
	try_files $uri/index.html $uri @{{.Backend}}_prod;

	location @{{.Backend}}_prod {
	{{if .Ssl}}
		proxy_set_header X-Forwarded-Proto https;
	{{else}}
		proxy_set_header X-Forwarded-Proto http;
	{{end}}
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_redirect off;
		proxy_pass http://{{.Backend}}_prod;
		# limit_req zone=one;
	}

	{{template "nginx-conf-assets"}}

	location /assets {
		alias {{.Root}}/themes/{{.Theme}}/assets;
		gzip_static on;
		expires 1d;
		access_log off;
		add_header Cache-Control "public";
	}
}
